package tgb.btc.rce.service.handler.impl.callback.users;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import tgb.btc.rce.enums.BotSystemMessage;
import tgb.btc.rce.enums.update.CallbackQueryData;
import tgb.btc.rce.sender.IResponseSender;
import tgb.btc.rce.service.processors.support.MessagesService;

import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
class MailingListCallbackHandlerTest {

    @Mock
    private MessagesService messagesService;

    @Mock
    private IResponseSender responseSender;

    @InjectMocks
    private MailingListCallbackHandler handler;

    @ParameterizedTest
    @ValueSource(strings = {
            """
                                        üöÄ–°–µ–≥–æ–¥–Ω—è –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –Ω–æ–≤–∞—è –º–∏–Ω–∏ –∏–≥—Ä–∞‚ÄºÔ∏è
                    
                            üíµ–î–µ–Ω–µ–∂–Ω—ã–µ –ø—Ä–∏–∑—ã + –∫—É–ø–æ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞ü§ñ
                    
                            üëä–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è\s
                            https://t.me/+fgUsdfqeqwe1231YzQy
                    """,
            """
                                        üéâüéÑ –ù–û–í–û–ì–û–î–ù–Ø–Ø –†–£–õ–ï–¢–ö–ê —Å @BULeqqBTC üé∞üéÅ
                    
                    ‚ú® –°—Ç–∞—Ä—Ç —É–∂–µ 19.12.24 ‚Äî –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏! üóì
                    
                    üí∞ –î–µ–Ω–µ–∂–Ω—ã–µ –ø—Ä–∏–∑—ã –∏ –∫—É–ø–æ–Ω—á–∏–∫–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞ –∂–¥—É—Ç —Ç–µ–±—è! üí≥üéâ
                    
                    –î–ª—è —É—á–∞—Å—Ç–∏—è:
                    üì© –ü–µ—Ä–µ–π–¥–∏ –≤ –∫–∞–Ω–∞–ª https://t.me/BULBA_213NFO , –≥–¥–µ —Ç—ã –Ω–∞–π–¥–µ—à—å –ø–æ—Å—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π. –í—ã–ø–æ–ª–Ω–∏–≤ –µ—ë, –æ—Ç–ø–∏—Å—ã–≤–∞–π –∞–¥–º–∏–Ω—É @priqwessa_legenda üßë‚ÄçüéÑ –∏ –∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –∏–≥—Ä—É!
                    
                    üîî –ù–µ —É–ø—É—Å—Ç–∏ —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å! üéâüëáüèª
                    –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —á–∞—Ç—É ‚Äî –∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É!
                    üëâüèª https://t.me/+fgUI5gds32e8M1YzQy
                    
                    ‚ú® –ü—É—Å—Ç—å –ù–æ–≤—ã–π –≥–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Å—é—Ä–ø—Ä–∏–∑–æ–≤ –∏ –≤—ã–∏–≥—Ä—ã—à–µ–π! üéä
                    """,
            """
                    1
                    """})
    void handle(String messageText) {
        CallbackQuery callbackQuery = new CallbackQuery();
        Message message = new Message();
        User user = new User();

        String data = "data";
        Integer messageId = 50000;
        Long chatId = 123456789L;
        int callbackQueryId = 24005;
        user.setId(chatId);
        message.setMessageId(messageId);
        message.setText(messageText);
        callbackQuery.setData(data);
        callbackQuery.setFrom(user);
        callbackQuery.setMessage(message);
        callbackQuery.setId(Integer.toString(callbackQueryId));

        handler.handle(callbackQuery);
        verify(messagesService).sendMessageToUsers(chatId, messageText);
        verify(responseSender).sendMessage(chatId, "–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é –≤–∞–º –ø—Ä–∏–¥–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ.");
        verify(responseSender).sendEditedMessageText(chatId, messageId, messageText + BotSystemMessage.MESSAGE_SENT.getText());
    }

    @Test
    void getCallbackQueryData() {
        assertEquals(CallbackQueryData.MAILING_LIST, handler.getCallbackQueryData());
    }
}